{"version":3,"file":"static/js/83.ad652691.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","../node_modules/nanoid/index.browser.js","redux/contacts/selectors.jsx","components/Form/Form.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\nSection.protoTypes = {\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"submitBtn\":\"Form_submitBtn__eUc-v\",\"label\":\"Form_label__8nx+5\",\"formInput\":\"Form_formInput__sgOCo\",\"form\":\"Form_form__e1yzW\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const getFilter = state => state.filter;\nexport const getContacts = state => state.contacts.items;\n","import css from './Form.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { getContacts } from 'redux/contacts/selectors';\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const isExsist = contacts.find(\n      el => el.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n\n    if (isExsist) {\n      form.reset();\n      return alert(isExsist.name + ' is already in contacts.');\n    }\n\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n        id: nanoid(5),\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>Name</label>\n      <input\n        className={css.formInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className={css.label}>Number</label>\n      <input\n        className={css.formInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.submitBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nForm.protoTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactBtn\":\"ContactList_contactBtn__GGPNU\",\"contactItem\":\"ContactList_contactItem__MZe0o\",\"contactsList\":\"ContactList_contactsList__a5jYl\"};","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, getContacts } from 'redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContacts);\n\n  const filter = useSelector(getFilter);\n\n  const normalizedFilter = filter.toLowerCase();\n  const visiableContacts =\n    contacts &&\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n  return (\n    <ul className={css.contactsList}>\n      {visiableContacts &&\n        visiableContacts.map(({ name, number, id }) => (\n          <li className={css.contactItem} key={id}>\n            <p>{name}</p> <p>{number}</p>\n            <button\n              className={css.contactBtn}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactsList.protoTypes = {\n  visiableContacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filter\":\"Filter_filter__vxThR\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filterAction } from 'redux/contacts/filterReducer';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = event => {\n    const filter = event.currentTarget.value;\n    dispatch(filterAction(filter));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.filterLabel}>Find contact by name</label>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n};\n\nFilter.protoTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\"};","import { Section } from 'components/Section/Section';\nimport { Form } from 'components/Form/Form';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  return (\n    <div className={css.container}>\n      <Section title={'Phonebook'}>\n        <Form />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Section","title","children","className","css","protoTypes","PropTypes","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","getFilter","state","filter","getContacts","contacts","items","Form","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","currentTarget","isExsist","find","el","name","toLowerCase","elements","value","reset","alert","addContact","number","type","pattern","required","handleSubmit","ContactsList","useEffect","fetchContacts","normalizedFilter","visiableContacts","contact","includes","map","onClick","deleteContact","Filter","onChange","filterAction","onChangeFilter","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}